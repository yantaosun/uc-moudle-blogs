package com.uc.moudle.blogs.provider.controller;import com.uc.blogs.api.enums.ErrorCode;import com.uc.blogs.api.exception.BlogsMoudleException;import com.uc.blogs.api.exception.ParamIllegalException;import com.uc.blogs.api.exception.SignatureFailException;import com.uc.blogs.api.moudle.BlogIndexMoudle;import com.uc.blogs.api.service.BlogsService;import com.uc.blogs.api.service.ForHTMLService;import com.ucs.moudlecommon.params.CommonParamsMoudle;import com.ucs.moudlecommon.response.BaseResponse;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;/** * @author 9527 * @ClassName BlogsController * @Date 2020/3/11 * @Description TODO * @Version 1.0 */@Controller@RequestMapping("/blog")public class BlogsController {    private Logger logger = LoggerFactory.getLogger(BlogsController.class);    @Autowired    private ForHTMLService forHTMLService;    @RequestMapping(value = "/data/index" ,method = RequestMethod.POST)    @ResponseBody    public BaseResponse<BlogIndexMoudle> index(@RequestBody CommonParamsMoudle<Integer> paramsMoudle){        logger.info("获取博客首页信息");        BaseResponse<BlogIndexMoudle> response = new BaseResponse<>();        try{            response = forHTMLService.index(paramsMoudle);        }catch (BlogsMoudleException e){            response.setSuccess(false);            response.setMessage(e.getMessage());            response.setCode(e.getErrCode());        }catch (ParamIllegalException e){            response.setSuccess(false);            response.setMessage(e.getMessage());            response.setCode(e.getErrCode());        }catch (SignatureFailException e){            response.setSuccess(false);            response.setMessage(e.getMessage());            response.setCode(e.getErrCode());        }catch (Exception e){            response.setSuccess(false);            response.setMessage(ErrorCode.SYSTEM_EXCEPTION.getMessage());            response.setCode(ErrorCode.SYSTEM_EXCEPTION.getCode());        }        return response;    }}